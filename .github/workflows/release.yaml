name: Release Pipeline

on:
  workflow_dispatch:
  push:
    branches: [ main ]

permissions:
  contents: write
  pull-requests: write
  actions: write

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: false

jobs:
  release-please:
    runs-on: ubuntu-latest
    outputs:
      release_created: ${{ steps.release.outputs.release_created }}
      tag_name: ${{ steps.release.outputs.tag_name }}
    steps:
      - uses: actions/checkout@v4

      - name: Run Release Please
        id: release
        uses: googleapis/release-please-action@v4
        with:
          release-type: go
          path: '.'

  build-linux:
    needs: [release-please]
    if: needs.release-please.outputs.release_created == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ needs.release-please.outputs.tag_name }}

      - uses: actions/setup-go@v5
        with:
          go-version: 'stable'
          cache: true

      - name: Install cross-compilers for Linux CGO
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential gcc-multilib \
                                 gcc-aarch64-linux-gnu libc6-dev-arm64-cross \
                                 gcc-i686-linux-gnu libc6-dev-i386-cross

      - uses: goreleaser/goreleaser-action@v6
        with:
          version: latest
          args: build --snapshot --id todo-linux
        env:
          CGO_ENABLED: "1"

      - name: Upload Linux artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist-linux
          path: dist/
          retention-days: 1

  build-darwin:
    needs: [release-please]
    if: needs.release-please.outputs.release_created == 'true'
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ needs.release-please.outputs.tag_name }}

      - uses: actions/setup-go@v5
        with:
          go-version: 'stable'
          cache: true

      - uses: goreleaser/goreleaser-action@v6
        with:
          version: latest
          args: build --snapshot --id todo-darwin
        env:
          CGO_ENABLED: "1"

      - name: Upload Darwin artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist-darwin
          path: dist/
          retention-days: 1

  build-windows:
    needs: [release-please]
    if: needs.release-please.outputs.release_created == 'true'
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ needs.release-please.outputs.tag_name }}

      - uses: actions/setup-go@v5
        with:
          go-version: 'stable'
          cache: true

      - name: Install MinGW for Windows CGO
        uses: msys2/setup-msys2@v2
        with:
          msystem: MINGW64
          update: true
          install: >-
            mingw-w64-x86_64-gcc
            mingw-w64-x86_64-g++
            mingw-w64-i686-gcc
            mingw-w64-i686-g++

      - uses: goreleaser/goreleaser-action@v6
        with:
          version: latest
          args: build --snapshot --id todo-windows
        env:
          CGO_ENABLED: "1"
          PATH: "${{ env.PATH }};C:\\msys64\\mingw64\\bin;C:\\msys64\\mingw32\\bin"

      - name: Upload Windows artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist-windows
          path: dist/
          retention-days: 1

  release:
    needs: [build-linux, build-darwin, build-windows]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ needs.release-please.outputs.tag_name }}

      - name: Download and merge artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist/
          merge-multiple: true

      - uses: goreleaser/goreleaser-action@v6
        with:
          version: latest
          args: release --skip-build --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}